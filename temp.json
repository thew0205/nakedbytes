{
    "tags": [],
    "tz": -25200,
    "days": [
        1,
        1,
        2,
        1
    ],
    "coord": [
        -90.0715,
        29.9510
    ],
    "data": [
        {
            "name": "ox03",
            "staff": true
        },
        {
            "name": null,
            "staff": false,
            "extra": {
                "info": ""
            }
        },
        {
            "name": "ox03",
            "staff": true
        },
        {}
    ]
}


Forward compatible if the initial data are fixed
Backward compatible by comparing the offset value of the root to the number of bytes in the rule
46 // Number of the bytes in the wire
5 // Number of byte in the root element uint32
0 // tags offset 0 means absent 0x00
-25200 // fixed sized interger her is 2 bytes 0x01
3 // days offset 0x03 
7 //coord offset 0x04
15 // data offset 0x05


4 // days lenght 0x06
1 // days data 0x07
1 // 0x08
2 // 0x09
1 //0x10
2 // coord leght 0x11
-90.0715 // 4 byte float 0x12
29.9510 // 4 bytes float 0x16
3 // data length 0x20
3 // offset to actual data  1 0x21
5 // offset to actual data  2 0x22
7// offset to actual data  3 0x23
10 // start of data 1  offset to null terminated string 0x24
0 // i byte bool 0x25
0 // extra field is empty 0x26
0 // start of data 2 absent string 0x27
0 // 1 byte bool 0x28
9 // offset to extra data field 0x29
4 // start of data 3 offset to null terminated string  0x30
1 // 1 byte 0x31
0 // extra empty 0x32
4 // string length it is basically a list of bytes 0x33
'o' // 0x34
'x' // 0x35
'0' // 0x36
'3' // 0x37
'\0' // 0x38
1 // start of extra field of data 2 0x39
'\0' // 0x40
'o' // 0x41
'x' // 0x42
'0' // 0x43
'3' // 0x44
'\0' // 0x45



{
    "tags": [],
    "tz": -25200,
    "days": [
        1,
        1,
        2,
        1
    ],
    "coord": [
        -90.0715,
        29.9510
    ],
    "data": [
        {
            "name": "ox03",
            "staff": true
        },
        {
            "name": null,
            "staff": false,
            "extra": {
                "info": ""
            }
        },
        {
            "name": "ox03",
            "staff": true
        },
        {}
    ],
    "baseline": {
        "name": "oooo",
        "staff": true
    }
}

 
1 byte offset length 1
No backward of forward compatibility.

-90.0715 // In place coord array 0x00
29.9510 // In place coord array 0x04
-25200 // fixed sized integer here is 2 bytes 0x08
0 // tags offset 0 means absent 0x0a
6 // days offset 0x0b

8 // data offset 0x0c

18 // in place base line name 0x0d
1 // baseline staff 0x0e
0 // baseline extra 0x0f

4 // days length 0x10
1 // days data 0x11
1 // 0x08 0x12
2 // 0x09 0x13
1 //0x10 0x14

3 // data length 0x15

9 // start of data 1  offset to null terminated string 0x16
1 // 1 byte bool 0x17
0 // extra field is empty 0x18

0 // start of data 2 absent string 0x19
0 // 1 byte bool 0x1a
0 // in place extra data (info field) 0x1b

3 // start of data 3 offset to null terminated string  0x1c
1 // 1 byte 0x1d
0 // extra empty 0x1e

4 // string length it is basically a list of bytes 0x1f
'o' // 0x20
'x' // 0x21
'0' // 0x22
'3' // 0x23
'\0' // 0x24
4 // 0x25
'o' // 0x26
'o'  //0x27
'o' //0x28
'o' //0x29
'\0' //0x2a



 
4 byte offset, length 1
No backward of forward compatibility.

-90.0715 // In place coord array 0x00
29.9510 // In place coord array 0x04
0 // tags offset 0 means absent 0x08
0x14 // days offset 0x0c

0x15 // data offset 0x10

0x3b // in place base line name 0x14
0 // baseline extra 0x18
1 // vaseline staff 0x1c
0x00 // padding 0x1d
-25200 // fixed sized integer here is 2 bytes 0x1e

4 // days length 0x20
1 // days data 0x21
1 //  0x22
2 // 0x23
1 // 0x24

3 // data length 0x25
0x00 // padding 0x26
0x00 // padding 0x27

0x21 // start of data 1  offset to null terminated string 0x28
0 // extra field is empty 0x2c
1 // 1 byte bool 0x30
0x00 // 3 byte padding 0x31
0 // start of data 2 absent string 0x34
0 // in place extra data (info field) 0x38
0 // 1 byte bool 0x3c
0x00 // 3 byte padding 0x3d
0x9 // start of data 3 offset to null terminated string  0x40
0 // extra empty 0x44
1 // 1 byte 0x48

4 // string length it is basically a list of bytes 0x49
'o' // 0x4a
'x' // 0x4b
'0' // 0x4c
'3' // 0x4d
'\0' // 0x4e
'o' // 0x4f
'o'  // 0x50
'o' // 0x51
'o' // 0x52
'\0' // 0x53
